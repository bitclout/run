# Use this file with `make local` to build and run a locally-compiled Docker image. This
# allows you to develop your node. Note the params are devnet params so you will need to
# change them if you want to run your new code on testnet or mainnet data.
#
# Note you will need to clone the backend and core repos as follows:
# $ cd ../
# $ git clone https://github.com/deso-protocol/backend
# $ git clone https://github.com/deso-protocol/core
# $ cd run
# $ make local
#
# Everything should work after that.
services:
  backend:
    container_name: backend
    image: local-backend:latest
    command: run
    entrypoint: /deso/bin/backend
    volumes:
    - local-db:/db
    ports:
    - 18001:18001
    - 18000:18000
    - 2345:2345
    environment:
    # Values we set here OVERRIDE the base.env variables.
    # Set the seed to a known devnet validator as an example
    - POS_VALIDATOR_SEED=category ignore around vibrant delay cargo apart truly rabbit blue master cash
    # For devnet, we must use a different checkpoint provider
    - CHECKPOINT_SYNCING_PROVIDERS=https://devnet-0.deso.run
    - TESTNET=true
    - REGTEST=true
    - CONNECT_IPS=devnet-0-root.deso.run:18000
    - PROTOCOL_PORT=18000
    - API_PORT=18001
    env_file:
    - base.env
    expose:
    - "18001"
    - "18000"
    - "2345"
  frontend:
    container_name: frontend 
    image: docker.io/desoprotocol/frontend:stable
    ports:
    - 8080:8080
    volumes:
    - ./:/app
    env_file:
    # TODO: We should break the frontend params from the backend params.
    - base.env
    expose:
    - "8080"
  nginx: 
    container_name: nginx
    image: nginx:latest
    volumes:
      - ./nginx.dev:/etc/nginx/nginx.conf
    depends_on: 
      - backend
      - frontend
    ports:
      - 80:80
      - 443:443
volumes:
  local-db:
